///////////////////////////////////////   命令行操作   //////////////////////////////////////////////

gradle tasks --all     // 列出一个build.gradle脚本中所有可用task名

gradle properties   // 列出所有配置属性

gradle yG0 gT   // 驼峰命名的缩略task名写法

gradle -x  yayGradle0  // 指定不执行的task

gradle -i    // 设置执行打印级别为INFO

gradle -q    //  静默执行，除了异常和打印其他都不显示

gradle -s    // 执行异常时打印调用栈

gradle -b    //  指定执行的build文件，非默认的build.gradle时使用

gradle --offline   //  执行离线依赖，仅在本地仓库寻找依赖包

gradle -Dmyprop=myvalue   //  指定编译时的JVM参数 

gradle --daemon   // 启动编译影子进程用于主流gradle依赖包到内存，减少每次编译加载时间  

gradle --stop     //  停止影子进程

gradle build    // 编译java程序命令，需要应用java插件

///////////////////////////////////////   脚本编写   //////////////////////////////////////////////


// 建立一个task任务，命名为helloWorld
task helloWorld {
	doLast {              //  指定task中最后执行的动作
		println 'Hello world!'
	}
}


task startSession << {  //  doLast的简写方式
	chant()
}

def chant() {       //  定义本地函数
	ant.echo(message: 'Repeat after me...')  // 使用ant的打印功能
}

3.times {   //  使用groovy的循环功能，执行3次，参数 it 表示第几次执行
	task "yayGradle$it" << {
		println 'Gradle rocks'
	}
}

yayGradle0.denpendsOn startSession              //  指定依赖task
yayGradle2.denpendsOn yayGradle1, yayGradle0    //  指定多个依赖task
task groupTherapy(denpendsOn: yayGradle2) {}


///////////////////////////////////////   完整示例   //////////////////////////////////////////////

apply plugin: 'java' // 指定使用java插件进行编译
apply plugin: 'war'  // 指定编译web程序war包，由于本插件会顺带引入java，因此可以省略java插件
apply from: 'https://raw.github.com/akhikhl/gretty/master/pluginScripts/gretty.plugin'     //  引入gretty插件，类似jetty

version = 0.1      //  指定当前jar包版本
sourceCompatibility = 1.6      //  指定jdk版本

sourceSets {
    main {
        java {
            srcDirs = ['src']      //  指定源代码的路径为src，而不是约定的 src/main/java
        }
    }
    test {
    	java {
    		srcDirs = ['test']    //  指定测试代码路径为test，而不是约定的 src/test/java
    	}
    }
}

buildDir = 'out'                 //  指定代码输出目录是 out 而不是约定的  build

jar {
    manifest {
        attributes 'Main-Class': 'com.manning.gia.todo.ToDoApp'        //  指定main方法所在类
    }
}

repositories {              //  指定仓库
    mavenCentral()          //  此处指定maven官方仓库
}

dependencies {
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.1'           // 指定依赖包

    providedCompile 'javax.servlet:servlet-api:2.5',              // 指定编译依赖包，仅在编译时使用，并不放入war包，执行时由运行时容器提供
                    'javax.servlet.jsp:jsp-api:2.1'
    runtime 'javax.servlet:jstl:1.1.2',                           // 指定运行依赖包，在执行时依赖，因此会放入war包
            'taglibs:standard:1.1.2'
}